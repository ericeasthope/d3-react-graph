"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var d3 = _interopRequireWildcard(require("d3"));

// components/Zoomable.tsx
var Zoomable = function Zoomable(_ref) {
  var disablePan = _ref.disablePan,
      disableDoubleClick = _ref.disableDoubleClick,
      disableTranslation = _ref.disableTranslation;
  // const width = d3.select('svg').node().getBoundingClientRect().width;
  // const height = d3.select('svg').node().getBoundingClientRect().height;
  var zoomable = d3.select('svg').call(d3.zoom().on('zoom', function () {
    var e = d3.event.transform; // const tx = Math.min(0, Math.max(e.x, width - width * e.k));
    // const ty = Math.min(0, Math.max(e.y, height - height * e.k));
    // Set zoom transformation

    var transformation = d3.zoomIdentity // .translate(width/2, height/2)
    .scale(e.k).translate(disableTranslation ? 0 : e.x, disableTranslation ? 0 : e.y);
    d3.select('svg').select('g').attr('transform', transformation.toString());
  })); // Disable double click D3 zoom behaviour

  if (disableDoubleClick) zoomable.on('dblclick.zoom', null); // Disable D3 zoom panning if desired

  if (disablePan) zoomable.on('mousedown.zoom', null);
  return;
};

var _default = Zoomable;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvbXBvbmVudHMvWm9vbWFibGUudHN4Il0sIm5hbWVzIjpbIlpvb21hYmxlIiwiZGlzYWJsZVBhbiIsImRpc2FibGVEb3VibGVDbGljayIsImRpc2FibGVUcmFuc2xhdGlvbiIsInpvb21hYmxlIiwiZDMiLCJzZWxlY3QiLCJjYWxsIiwiem9vbSIsIm9uIiwiZSIsImV2ZW50IiwidHJhbnNmb3JtIiwidHJhbnNmb3JtYXRpb24iLCJ6b29tSWRlbnRpdHkiLCJzY2FsZSIsImsiLCJ0cmFuc2xhdGUiLCJ4IiwieSIsImF0dHIiLCJ0b1N0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUE7O0FBRkE7QUFVQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxPQUlTO0FBQUEsTUFIeEJDLFVBR3dCLFFBSHhCQSxVQUd3QjtBQUFBLE1BRnhCQyxrQkFFd0IsUUFGeEJBLGtCQUV3QjtBQUFBLE1BRHhCQyxrQkFDd0IsUUFEeEJBLGtCQUN3QjtBQUN4QjtBQUNBO0FBRUEsTUFBTUMsUUFBUSxHQUFHQyxFQUFFLENBQUNDLE1BQUgsQ0FBVSxLQUFWLEVBQWlCQyxJQUFqQixDQUNmRixFQUFFLENBQUNHLElBQUgsR0FBVUMsRUFBVixDQUFhLE1BQWIsRUFBcUIsWUFBWTtBQUMvQixRQUFNQyxDQUFDLEdBQUdMLEVBQUUsQ0FBQ00sS0FBSCxDQUFTQyxTQUFuQixDQUQrQixDQUcvQjtBQUNBO0FBRUE7O0FBQ0EsUUFBTUMsY0FBYyxHQUFHUixFQUFFLENBQUNTLFlBQUgsQ0FDckI7QUFEcUIsS0FFcEJDLEtBRm9CLENBRWRMLENBQUMsQ0FBQ00sQ0FGWSxFQUdwQkMsU0FIb0IsQ0FHVmQsa0JBQWtCLEdBQUcsQ0FBSCxHQUFPTyxDQUFDLENBQUNRLENBSGpCLEVBR29CZixrQkFBa0IsR0FBRyxDQUFILEdBQU9PLENBQUMsQ0FBQ1MsQ0FIL0MsQ0FBdkI7QUFLQWQsSUFBQUEsRUFBRSxDQUFDQyxNQUFILENBQVUsS0FBVixFQUFpQkEsTUFBakIsQ0FBd0IsR0FBeEIsRUFBNkJjLElBQTdCLENBQWtDLFdBQWxDLEVBQStDUCxjQUFjLENBQUNRLFFBQWYsRUFBL0M7QUFDRCxHQWJELENBRGUsQ0FBakIsQ0FKd0IsQ0FxQnhCOztBQUNBLE1BQUluQixrQkFBSixFQUF3QkUsUUFBUSxDQUFDSyxFQUFULENBQVksZUFBWixFQUE2QixJQUE3QixFQXRCQSxDQXdCeEI7O0FBQ0EsTUFBSVIsVUFBSixFQUFnQkcsUUFBUSxDQUFDSyxFQUFULENBQVksZ0JBQVosRUFBOEIsSUFBOUI7QUFFaEI7QUFDRCxDQWhDRDs7ZUFrQ2VULFEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL1pvb21hYmxlLnRzeFxuXG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGRpc2FibGVQYW4/OiBib29sZWFuO1xuICBkaXNhYmxlRG91YmxlQ2xpY2s/OiBib29sZWFuO1xuICBkaXNhYmxlVHJhbnNsYXRpb24/OiBib29sZWFuO1xufVxuXG5jb25zdCBab29tYWJsZSA9ICh7XG4gIGRpc2FibGVQYW4sXG4gIGRpc2FibGVEb3VibGVDbGljayxcbiAgZGlzYWJsZVRyYW5zbGF0aW9uLFxufTogUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIC8vIGNvbnN0IHdpZHRoID0gZDMuc2VsZWN0KCdzdmcnKS5ub2RlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG4gIC8vIGNvbnN0IGhlaWdodCA9IGQzLnNlbGVjdCgnc3ZnJykubm9kZSgpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcblxuICBjb25zdCB6b29tYWJsZSA9IGQzLnNlbGVjdCgnc3ZnJykuY2FsbChcbiAgICBkMy56b29tKCkub24oJ3pvb20nLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBlID0gZDMuZXZlbnQudHJhbnNmb3JtO1xuXG4gICAgICAvLyBjb25zdCB0eCA9IE1hdGgubWluKDAsIE1hdGgubWF4KGUueCwgd2lkdGggLSB3aWR0aCAqIGUuaykpO1xuICAgICAgLy8gY29uc3QgdHkgPSBNYXRoLm1pbigwLCBNYXRoLm1heChlLnksIGhlaWdodCAtIGhlaWdodCAqIGUuaykpO1xuXG4gICAgICAvLyBTZXQgem9vbSB0cmFuc2Zvcm1hdGlvblxuICAgICAgY29uc3QgdHJhbnNmb3JtYXRpb24gPSBkMy56b29tSWRlbnRpdHlcbiAgICAgICAgLy8gLnRyYW5zbGF0ZSh3aWR0aC8yLCBoZWlnaHQvMilcbiAgICAgICAgLnNjYWxlKGUuaylcbiAgICAgICAgLnRyYW5zbGF0ZShkaXNhYmxlVHJhbnNsYXRpb24gPyAwIDogZS54LCBkaXNhYmxlVHJhbnNsYXRpb24gPyAwIDogZS55KTtcblxuICAgICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCB0cmFuc2Zvcm1hdGlvbi50b1N0cmluZygpKTtcbiAgICB9KSxcbiAgKTtcblxuICAvLyBEaXNhYmxlIGRvdWJsZSBjbGljayBEMyB6b29tIGJlaGF2aW91clxuICBpZiAoZGlzYWJsZURvdWJsZUNsaWNrKSB6b29tYWJsZS5vbignZGJsY2xpY2suem9vbScsIG51bGwpO1xuXG4gIC8vIERpc2FibGUgRDMgem9vbSBwYW5uaW5nIGlmIGRlc2lyZWRcbiAgaWYgKGRpc2FibGVQYW4pIHpvb21hYmxlLm9uKCdtb3VzZWRvd24uem9vbScsIG51bGwpO1xuXG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFpvb21hYmxlO1xuIl19