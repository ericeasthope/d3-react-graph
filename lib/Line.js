"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var d3 = _interopRequireWildcard(require("d3"));

// components/Line.tsx
var Line = function Line(_ref) {
  var links = _ref.links,
      stroke = _ref.stroke,
      strokeWidth = _ref.strokeWidth;
  var enterStroke = stroke.enterStroke,
      updateStroke = stroke.updateStroke,
      exitStroke = stroke.exitStroke;
  var link = d3.select('.links').selectAll('line').data(links).join(function (enter) {
    return enter.append('line').attr('stroke', enterStroke);
  }, function (update) {
    return update.attr('stroke', updateStroke);
  }, function (exit) {
    return exit.attr('stroke', exitStroke).remove();
  }).attr('stroke-width', strokeWidth ? strokeWidth : 1) // (d) => Math.sqrt(d.value ? d.value : 1));
  .attr('stroke-opacity', 0.6);
  return {
    name: 'line',
    tick: function tick() {
      link.attr('x1', function (d) {
        return d.source.x;
      }).attr('y1', function (d) {
        return d.source.y;
      }).attr('x2', function (d) {
        return d.target.x;
      }).attr('y2', function (d) {
        return d.target.y;
      });
    }
  };
};

var _default = Line;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvbXBvbmVudHMvTGluZS50c3giXSwibmFtZXMiOlsiTGluZSIsImxpbmtzIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJlbnRlclN0cm9rZSIsInVwZGF0ZVN0cm9rZSIsImV4aXRTdHJva2UiLCJsaW5rIiwiZDMiLCJzZWxlY3QiLCJzZWxlY3RBbGwiLCJkYXRhIiwiam9pbiIsImVudGVyIiwiYXBwZW5kIiwiYXR0ciIsInVwZGF0ZSIsImV4aXQiLCJyZW1vdmUiLCJuYW1lIiwidGljayIsImQiLCJzb3VyY2UiLCJ4IiwieSIsInRhcmdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUE7O0FBRkE7QUFvQkEsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQU8sT0FPUjtBQUFBLE1BTkhDLEtBTUcsUUFOSEEsS0FNRztBQUFBLE1BTEhDLE1BS0csUUFMSEEsTUFLRztBQUFBLE1BSkhDLFdBSUcsUUFKSEEsV0FJRztBQUFBLE1BQ0tDLFdBREwsR0FDK0NGLE1BRC9DLENBQ0tFLFdBREw7QUFBQSxNQUNrQkMsWUFEbEIsR0FDK0NILE1BRC9DLENBQ2tCRyxZQURsQjtBQUFBLE1BQ2dDQyxVQURoQyxHQUMrQ0osTUFEL0MsQ0FDZ0NJLFVBRGhDO0FBRUgsTUFBTUMsSUFBSSxHQUFHQyxFQUFFLENBQ1pDLE1BRFUsQ0FDSCxRQURHLEVBRVZDLFNBRlUsQ0FFQSxNQUZBLEVBR1ZDLElBSFUsQ0FHTFYsS0FISyxFQUlWVyxJQUpVLENBS1QsVUFBQ0MsS0FBRDtBQUFBLFdBQVdBLEtBQUssQ0FBQ0MsTUFBTixDQUFhLE1BQWIsRUFBcUJDLElBQXJCLENBQTBCLFFBQTFCLEVBQW9DWCxXQUFwQyxDQUFYO0FBQUEsR0FMUyxFQU1ULFVBQUNZLE1BQUQ7QUFBQSxXQUFZQSxNQUFNLENBQUNELElBQVAsQ0FBWSxRQUFaLEVBQXNCVixZQUF0QixDQUFaO0FBQUEsR0FOUyxFQU9ULFVBQUNZLElBQUQ7QUFBQSxXQUFVQSxJQUFJLENBQUNGLElBQUwsQ0FBVSxRQUFWLEVBQW9CVCxVQUFwQixFQUFnQ1ksTUFBaEMsRUFBVjtBQUFBLEdBUFMsRUFTVkgsSUFUVSxDQVNMLGNBVEssRUFTV1osV0FBVyxHQUFHQSxXQUFILEdBQWlCLENBVHZDLEVBUzBDO0FBVDFDLEdBVVZZLElBVlUsQ0FVTCxnQkFWSyxFQVVhLEdBVmIsQ0FBYjtBQVlBLFNBQU87QUFDTEksSUFBQUEsSUFBSSxFQUFFLE1BREQ7QUFFTEMsSUFBQUEsSUFBSSxFQUFFLGdCQUFNO0FBQ1ZiLE1BQUFBLElBQUksQ0FDRFEsSUFESCxDQUNRLElBRFIsRUFDYyxVQUFDTSxDQUFEO0FBQUEsZUFBMkNBLENBQUMsQ0FBQ0MsTUFBRixDQUFTQyxDQUFwRDtBQUFBLE9BRGQsRUFFR1IsSUFGSCxDQUVRLElBRlIsRUFFYyxVQUFDTSxDQUFEO0FBQUEsZUFBMkNBLENBQUMsQ0FBQ0MsTUFBRixDQUFTRSxDQUFwRDtBQUFBLE9BRmQsRUFHR1QsSUFISCxDQUdRLElBSFIsRUFHYyxVQUFDTSxDQUFEO0FBQUEsZUFBMkNBLENBQUMsQ0FBQ0ksTUFBRixDQUFTRixDQUFwRDtBQUFBLE9BSGQsRUFJR1IsSUFKSCxDQUlRLElBSlIsRUFJYyxVQUFDTSxDQUFEO0FBQUEsZUFBMkNBLENBQUMsQ0FBQ0ksTUFBRixDQUFTRCxDQUFwRDtBQUFBLE9BSmQ7QUFLRDtBQVJJLEdBQVA7QUFVRCxDQS9CRDs7ZUFpQ2V4QixJIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY29tcG9uZW50cy9MaW5lLnRzeFxuXG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5cbmltcG9ydCB7IEQzTGluayB9IGZyb20gJ3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgbGlua3M/OiBEM0xpbmtbXTtcbiAgc3Ryb2tlPzoge1xuICAgIGVudGVyU3Ryb2tlOiBzdHJpbmc7XG4gICAgdXBkYXRlU3Ryb2tlOiBzdHJpbmc7XG4gICAgZXhpdFN0cm9rZTogc3RyaW5nO1xuICB9O1xuICBzdHJva2VXaWR0aD86XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgKChkOiBEM0xpbmspID0+IG51bWJlcilcbiAgICB8ICgoZDogRDNMaW5rKSA9PiBzdHJpbmcpO1xufVxuXG5jb25zdCBMaW5lID0gKHtcbiAgbGlua3MsXG4gIHN0cm9rZSxcbiAgc3Ryb2tlV2lkdGgsXG59OiBQcm9wcyk6IEpTWC5FbGVtZW50ICYge1xuICBuYW1lOiBzdHJpbmc7XG4gIHRpY2s6ICgpID0+IHZvaWQ7XG59ID0+IHtcbiAgY29uc3QgeyBlbnRlclN0cm9rZSwgdXBkYXRlU3Ryb2tlLCBleGl0U3Ryb2tlIH0gPSBzdHJva2U7XG4gIGNvbnN0IGxpbmsgPSBkM1xuICAgIC5zZWxlY3QoJy5saW5rcycpXG4gICAgLnNlbGVjdEFsbCgnbGluZScpXG4gICAgLmRhdGEobGlua3MpXG4gICAgLmpvaW4oXG4gICAgICAoZW50ZXIpID0+IGVudGVyLmFwcGVuZCgnbGluZScpLmF0dHIoJ3N0cm9rZScsIGVudGVyU3Ryb2tlKSxcbiAgICAgICh1cGRhdGUpID0+IHVwZGF0ZS5hdHRyKCdzdHJva2UnLCB1cGRhdGVTdHJva2UpLFxuICAgICAgKGV4aXQpID0+IGV4aXQuYXR0cignc3Ryb2tlJywgZXhpdFN0cm9rZSkucmVtb3ZlKCksXG4gICAgKVxuICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCBzdHJva2VXaWR0aCA/IHN0cm9rZVdpZHRoIDogMSkgLy8gKGQpID0+IE1hdGguc3FydChkLnZhbHVlID8gZC52YWx1ZSA6IDEpKTtcbiAgICAuYXR0cignc3Ryb2tlLW9wYWNpdHknLCAwLjYpO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogJ2xpbmUnLFxuICAgIHRpY2s6ICgpID0+IHtcbiAgICAgIGxpbmtcbiAgICAgICAgLmF0dHIoJ3gxJywgKGQ6IEQzTGluayAmIHsgc291cmNlOiB7IHg6IG51bWJlciB9IH0pID0+IGQuc291cmNlLngpXG4gICAgICAgIC5hdHRyKCd5MScsIChkOiBEM0xpbmsgJiB7IHNvdXJjZTogeyB5OiBudW1iZXIgfSB9KSA9PiBkLnNvdXJjZS55KVxuICAgICAgICAuYXR0cigneDInLCAoZDogRDNMaW5rICYgeyB0YXJnZXQ6IHsgeDogbnVtYmVyIH0gfSkgPT4gZC50YXJnZXQueClcbiAgICAgICAgLmF0dHIoJ3kyJywgKGQ6IEQzTGluayAmIHsgdGFyZ2V0OiB7IHk6IG51bWJlciB9IH0pID0+IGQudGFyZ2V0LnkpO1xuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBMaW5lO1xuIl19